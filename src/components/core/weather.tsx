import React, { HTMLAttributes, useState } from "react"
import { largeEnd, weatherAutumn, weatherAverage, weatherBad, weatherGood, weatherSki } from "./variables"
import { useCustomTranslation } from "../../i18n-hook"
import { Button } from "./button"
import { css } from "@emotion/react"
import { Table } from "../layout/layout"
import styled from "@emotion/styled"
import { WeatherAltIconType, WeatherEntry, WeatherIconType, WeatherType } from "../../types/shared"
import { japanCherryBlossom } from "./japan/japan.variables"
import { Lang } from "./links/links.types"
// https://www.flaticon.com/free-icon/drop_2204430?related_id=2204430&origin=pack

export const HeavyRain: React.FunctionComponent = () => (
  <svg viewBox="0 0 497 497">
    <path
      d="m295.88 4.914c-12.642-3.206-25.876-4.914-39.502-4.914-69.776 0-129.126 44.596-151.133 106.835v.007c-57.35.76-105.245 47.61-105.245 106.853 0 59.01 47.837 106.847 106.847 106.847h227.356z"
      fill="#b9bbbc"
    />
    <path
      d="m416.626 160.267c-.004-75.047-51.455-137.779-120.746-155.353-69.387 17.617-120.719 80.491-120.719 155.359 0 88.107 71.092 159.6 159.042 160.269h82.662c44.258 0 80.135-35.878 80.135-80.136 0-44.837-36.644-80.373-80.374-80.139z"
      fill="#d4d4d5"
    />
    <ellipse
      cx="199.471"
      cy="191.385"
      fill="#ff8e9e"
      rx="25.471"
      ry="20.283"
      transform="matrix(1 .003 -.003 1 .601 -.624)"
    />
    <ellipse
      cx="337.529"
      cy="191.817"
      fill="#ff8e9e"
      rx="25.471"
      ry="20.283"
      transform="matrix(-1 -.003 .003 -1 674.457 384.69)"
    />
    <g fill="#313d40">
      <path d="m204.5 152.042c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z" />
      <path d="m332.5 152.042c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z" />
      <path d="m288.235 165.776c-3.737-1.789-8.215-.206-10.001 3.531-1.666 3.484-5.291 5.735-9.234 5.735s-7.568-2.251-9.234-5.735c-1.787-3.737-6.266-5.317-10.001-3.531-3.737 1.787-5.318 6.265-3.531 10.001 4.144 8.666 13.08 14.265 22.766 14.265s18.623-5.599 22.766-14.265c1.787-3.736.206-8.214-3.531-10.001z" />
      <path d="m218.745 134.425-12.99-7.5c-3.587-2.072-8.174-.843-10.245 2.745-2.071 3.587-.842 8.174 2.745 10.245l12.99 7.5c1.181.682 2.471 1.006 3.743 1.006 2.592 0 5.113-1.345 6.502-3.751 2.072-3.587.843-8.174-2.745-10.245z" />
      <path d="m341.49 129.67c-2.071-3.588-6.658-4.817-10.245-2.745l-12.99 7.5c-3.587 2.071-4.816 6.658-2.745 10.245 1.389 2.406 3.91 3.751 6.502 3.751 1.272 0 2.562-.324 3.743-1.006l12.99-7.5c3.588-2.071 4.817-6.658 2.745-10.245z" />
    </g>
    <path
      d="m286.8 405.972.014.014c12.177-12.176 15.084-38.354 15.037-55.565v-.028c-.024-2.738-2.262-4.965-5.001-4.972-16.944-.047-43.639 3.109-55.565 15.036l-.001.001.014.014c-12.852 12.852-12.38 32.857.132 45.369 12.569 12.57 32.879 12.621 45.37.131z"
      fill="#7ce3ff"
    />
    <path
      d="m169.308 399.219.008.008c6.958-6.958 8.619-21.917 8.592-31.752v-.016c-.014-1.565-1.292-2.837-2.857-2.841-9.682-.027-24.936 1.777-31.752 8.592h-.001l.008.008c-7.344 7.344-7.074 18.776.075 25.925 7.183 7.184 18.789 7.213 25.927.076z"
      fill="#b9f0ff"
    />
    <path
      d="m377.997 397.384.011.011c9.352-9.352 11.585-29.458 11.549-42.677v-.022c-.018-2.103-1.737-3.813-3.841-3.819-13.014-.036-33.517 2.388-42.677 11.548l-.001.001.011.011c-9.871 9.871-9.508 25.236.101 34.846 9.654 9.655 25.254 9.694 34.847.101z"
      fill="#7ce3ff"
    />
    <path
      d="m209.569 432.573c-13.014-.036-33.517 2.388-42.677 11.548l-.001.001.011.011c-9.871 9.871-9.508 25.236.101 34.846 9.654 9.655 25.253 9.695 34.847.101l.011.011c9.352-9.352 11.585-29.458 11.549-42.677v-.022c-.018-2.103-1.737-3.813-3.841-3.819z"
      fill="#7ce3ff"
    />
    <path
      d="m120.703 427.116c-16.944-.046-43.639 3.109-55.565 15.036l-.001.001.014.014c-12.852 12.852-12.38 32.857.132 45.369 12.569 12.571 32.88 12.623 45.37.132l.014.014c12.177-12.177 15.084-38.355 15.037-55.565v-.028c-.024-2.739-2.262-4.966-5.001-4.973z"
      fill="#7ce3ff"
    />
    <path
      d="m313.512 443.326c-13.014-.036-33.517 2.388-42.677 11.548l-.001.001.011.011c-9.871 9.871-9.508 25.236.101 34.846 9.654 9.655 25.253 9.695 34.847.101l.011.011c9.352-9.352 11.585-29.458 11.549-42.677v-.022c-.019-2.103-1.738-3.814-3.841-3.819z"
      fill="#b9f0ff"
    />
    <path
      d="m404.675 446.314c-9.682-.027-24.936 1.777-31.752 8.592h-.001l.008.008c-7.344 7.344-7.074 18.776.075 25.925 7.183 7.184 18.789 7.213 25.926.075l.008.008c6.958-6.958 8.619-21.917 8.592-31.752v-.016c-.013-1.564-1.291-2.836-2.856-2.84z"
      fill="#7ce3ff"
    />
  </svg>
)

export const Sunny: React.FunctionComponent = () => (
  <svg viewBox="0 0 497 497">
    <path
      d="m272.363 9.19 32.407 29.308 42.719-9.178c17.861-3.837 35.725 6.477 41.332 23.863l13.411 41.585 41.585 13.411c17.387 5.607 27.701 23.471 23.863 41.332l-9.178 42.719 29.308 32.407c12.254 13.549 12.254 34.177 0 47.726l-29.308 32.407 9.178 42.719c3.837 17.861-6.477 35.725-23.863 41.332l-41.585 13.411-13.411 41.585c-5.607 17.387-23.471 27.701-41.332 23.863l-42.719-9.178-32.407 29.308c-13.549 12.254-34.177 12.254-47.726 0l-32.407-29.308-42.719 9.178c-17.861 3.837-35.725-6.477-41.332-23.863l-13.411-41.585-41.585-13.411c-17.387-5.607-27.701-23.471-23.863-41.332l9.178-42.719-29.308-32.407c-12.254-13.549-12.254-34.177 0-47.726l29.308-32.407-9.178-42.719c-3.837-17.861 6.477-35.725 23.863-41.332l41.585-13.411 13.411-41.585c5.607-17.387 23.471-27.701 41.332-23.863l42.719 9.178 32.407-29.308c13.549-12.253 34.177-12.253 47.726 0z"
      fill="#ffb357"
    />
    <path
      d="m248.5 436.485c-103.655 0-187.985-84.33-187.985-187.985s84.33-187.985 187.985-187.985 187.985 84.33 187.985 187.985-84.33 187.985-187.985 187.985z"
      fill="#fce3a0"
    />
    <path
      d="m162.515 248.5c0-85.986 58.032-158.669 136.985-180.952-16.224-4.579-33.331-7.034-51-7.034-103.655 0-187.985 84.33-187.985 187.985s84.33 187.985 187.985 187.985c17.669 0 34.776-2.455 51-7.034-78.953-22.281-136.985-94.964-136.985-180.95z"
      fill="#ffce71"
    />
    <ellipse
      cx="169.331"
      cy="240.763"
      fill="#ff8e9e"
      rx="29.212"
      ry="23.263"
      transform="matrix(1 .003 -.003 1 .755 -.529)"
    />
    <ellipse
      cx="327.669"
      cy="241.259"
      fill="#ff8e9e"
      rx="29.212"
      ry="23.263"
      transform="matrix(-1 -.003 .003 -1 654.581 483.543)"
    />
    <g fill="#313d40">
      <path d="m184 198.5c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z" />
      <path d="m312 198.5c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z" />
      <path d="m267.735 227.234c-3.737-1.789-8.215-.206-10.001 3.531-1.666 3.484-5.291 5.735-9.234 5.735s-7.568-2.251-9.234-5.735c-1.787-3.737-6.266-5.317-10.001-3.531-3.737 1.787-5.318 6.265-3.531 10.001 4.144 8.666 13.08 14.265 22.766 14.265s18.623-5.599 22.766-14.265c1.787-3.736.206-8.214-3.531-10.001z" />
    </g>
  </svg>
)
export const SunAndCloud: React.FunctionComponent = () => (
  <svg viewBox="0 0 497 497">
    <path
      d="m199.477 6.731 23.734 21.465 31.287-6.722c13.081-2.811 26.165 4.743 30.271 17.477l9.822 30.457 30.457 9.822c12.734 4.107 20.288 17.19 17.477 30.271l-6.722 31.287 21.465 23.734c8.975 9.923 8.975 25.031 0 34.954l-21.465 23.734 6.722 31.287c2.811 13.081-4.743 26.165-17.477 30.271l-30.457 9.822-9.822 30.457c-4.107 12.734-17.19 20.288-30.271 17.477l-31.287-6.722-23.734 21.465c-9.923 8.975-25.031 8.975-34.954 0l-23.734-21.465-31.287 6.722c-13.081 2.811-26.165-4.743-30.271-17.477l-9.822-30.457-30.457-9.822c-12.734-4.107-20.288-17.19-17.477-30.271l6.722-31.287-21.466-23.733c-8.975-9.923-8.975-25.031 0-34.954l21.465-23.734-6.722-31.287c-2.811-13.082 4.743-26.166 17.477-30.272l30.457-9.822 9.822-30.457c4.107-12.734 17.19-20.288 30.271-17.477l31.287 6.722 23.734-21.465c9.924-8.975 25.032-8.975 34.955 0z"
      fill="#ffb357"
    />
    <path
      d="m182 319.679c-75.917 0-137.679-61.763-137.679-137.679s61.762-137.679 137.679-137.679 137.679 61.762 137.679 137.679-61.762 137.679-137.679 137.679z"
      fill="#fce3a0"
    />
    <path
      d="m119.025 182c0-62.976 42.502-116.208 100.327-132.528-11.883-3.354-24.411-5.152-37.352-5.152-75.917 0-137.679 61.763-137.679 137.679s61.762 137.68 137.679 137.68c12.941 0 25.469-1.798 37.352-5.152-57.825-16.319-100.327-69.552-100.327-132.527z"
      fill="#ffce71"
    />
    <path
      d="m318.946 217.571c-11.192-2.839-22.909-4.351-34.972-4.351-61.774 0-114.317 39.481-133.8 94.583v.006c-50.772.673-93.174 42.15-93.174 94.598 0 52.242 42.351 94.593 94.593 94.593h201.281z"
      fill="#d4d4d5"
    />
    <path
      d="m425.844 355.107c-.004-66.44-45.554-121.977-106.898-137.535-61.429 15.597-106.874 71.26-106.874 137.541 0 78.002 62.939 141.295 140.802 141.888h73.181c39.182-.001 70.945-31.764 70.945-70.946 0-39.696-32.442-71.156-71.156-70.948z"
      fill="#efedee"
    />
    <ellipse
      cx="99.331"
      cy="180.763"
      fill="#ff8e9e"
      rx="29.212"
      ry="23.263"
      transform="matrix(1 .003 -.003 1 .567 -.31)"
    />
    <ellipse
      cx="257.669"
      cy="181.259"
      fill="#ff8e9e"
      rx="29.212"
      ry="23.263"
      transform="matrix(-1 -.003 .003 -1 514.769 363.325)"
    />
    <g fill="#313d40">
      <path d="m114 138.5c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z" />
      <path d="m242 138.5c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z" />
      <path d="m197.735 157.234c-3.737-1.789-8.215-.206-10.001 3.531-1.666 3.484-5.291 5.735-9.234 5.735s-7.568-2.251-9.234-5.735c-1.787-3.737-6.266-5.317-10.001-3.531-3.737 1.787-5.318 6.265-3.531 10.001 4.144 8.666 13.08 14.265 22.766 14.265s18.623-5.599 22.766-14.265c1.787-3.737.206-8.215-3.531-10.001z" />
    </g>
    <ellipse
      cx="217.971"
      cy="387.843"
      fill="#ff8e9e"
      rx="25.471"
      ry="20.283"
      transform="matrix(1 .003 -.003 1 1.216 -.681)"
    />
    <ellipse
      cx="356.029"
      cy="388.275"
      fill="#ff8e9e"
      rx="25.471"
      ry="20.283"
      transform="matrix(-1 -.003 .003 -1 710.841 777.663)"
    />
    <path
      d="m223 348.5c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z"
      fill="#313d40"
    />
    <path
      d="m351 348.5c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z"
      fill="#313d40"
    />
    <path
      d="m306.735 362.234c-3.737-1.789-8.215-.206-10.001 3.531-1.666 3.484-5.291 5.735-9.234 5.735s-7.568-2.251-9.234-5.735c-1.787-3.737-6.266-5.317-10.001-3.531-3.737 1.787-5.318 6.265-3.531 10.001 4.144 8.666 13.08 14.265 22.766 14.265s18.623-5.599 22.766-14.265c1.787-3.736.206-8.214-3.531-10.001z"
      fill="#313d40"
    />
  </svg>
)
export const Snow: React.FunctionComponent = () => (
  <svg viewBox="0 0 497 497">
    <path
      d="m295.88 4.914c-12.642-3.206-25.876-4.914-39.502-4.914-69.776 0-129.126 44.596-151.133 106.835v.007c-57.35.76-105.245 47.61-105.245 106.853 0 59.01 47.837 106.847 106.847 106.847h227.356z"
      fill="#d4d4d5"
    />
    <path
      d="m416.626 160.267c-.004-75.047-51.455-137.779-120.746-155.353-69.387 17.617-120.719 80.491-120.719 155.359 0 88.107 71.092 159.6 159.042 160.269h82.662c44.258 0 80.135-35.878 80.135-80.136 0-44.837-36.644-80.373-80.374-80.139z"
      fill="#efedee"
    />
    <path
      d="m488.214 437 4.393-4.394c5.858-5.857 5.858-15.355 0-21.213-5.857-5.857-15.355-5.857-21.213 0l-10.607 10.607h-8.787v-8.787l10.606-10.606c5.858-5.857 5.858-15.355 0-21.213-5.857-5.857-15.355-5.857-21.213 0l-4.393 4.393-4.394-4.394c-5.857-5.857-15.355-5.857-21.213 0s-5.858 15.355 0 21.213l10.607 10.607v8.787h-8.787l-10.606-10.606c-5.857-5.857-15.355-5.857-21.213 0s-5.858 15.355 0 21.213l4.393 4.394-4.393 4.394c-5.858 5.857-5.858 15.355 0 21.213 2.928 2.927 6.767 4.392 10.606 4.392s7.678-1.465 10.606-4.394l10.607-10.606h8.787v8.787l-10.606 10.606c-5.858 5.857-5.858 15.355 0 21.213 5.857 5.857 15.355 5.857 21.213 0l4.394-4.394 4.394 4.394c2.927 2.929 6.766 4.394 10.605 4.394s7.678-1.465 10.606-4.394c5.858-5.857 5.858-15.355 0-21.213l-10.606-10.606v-8.787h8.787l10.606 10.606c2.929 2.929 6.768 4.394 10.607 4.394s7.678-1.465 10.606-4.394c5.858-5.857 5.858-15.355 0-21.213z"
      fill="#efedee"
    />
    <path
      d="m241.058 324.21-4.569-3.668 4.569-3.67c6.46-5.187 7.492-14.628 2.306-21.087-5.185-6.46-14.628-7.494-21.087-2.306l-17.666 14.184-17.944 8.142v-4.021l21.664-17.392c6.46-5.187 7.492-14.628 2.307-21.088-5.188-6.459-14.625-7.492-21.088-2.307l-2.883 2.314v-4.593c0-8.284-6.716-15-15-15s-15 6.716-15 15v4.592l-2.882-2.313c-6.46-5.185-15.901-4.152-21.088 2.307-5.186 6.46-4.153 15.901 2.307 21.088l21.663 17.392v4.021l-17.943-8.142-17.667-14.185c-6.461-5.186-15.901-4.152-21.087 2.307-5.187 6.46-4.154 15.901 2.306 21.087l4.57 3.67-4.57 3.668c-6.46 5.187-7.492 14.628-2.307 21.088 2.963 3.69 7.315 5.61 11.707 5.61 3.294 0 6.611-1.081 9.381-3.304l11.949-9.593 13.752 6.241-7.001 7.736h-20.412c-8.284 0-15 6.716-15 15s6.716 15 15 15h12.067v6.73c0 8.284 6.716 15 15 15s15-6.716 15-15v-15.951l10.253-11.33 10.254 11.331v15.95c0 8.284 6.716 15 15 15s15-6.716 15-15v-6.73h12.067c8.284 0 15-6.716 15-15s-6.716-15-15-15h-20.411l-7.001-7.736 13.752-6.24 11.948 9.592c2.77 2.223 6.086 3.304 9.381 3.304 4.392 0 8.744-1.92 11.707-5.61 5.188-6.46 4.156-15.901-2.304-21.088z"
      fill="#efedee"
    />
    <g fill="#d4d4d5">
      <circle cx="327.5" cy="458.162" r="22.5" />
      <circle cx="47.5" cy="404.162" r="22.5" />
      <circle cx="314.498" cy="371.662" r="30" />
      <circle cx="227" cy="482" r="15" />
      <circle cx="158.061" cy="444.162" r="15" />
    </g>
    <ellipse
      cx="199.471"
      cy="191.385"
      fill="#ff8e9e"
      rx="25.471"
      ry="20.283"
      transform="matrix(1 .003 -.003 1 .601 -.624)"
    />
    <ellipse
      cx="337.529"
      cy="191.817"
      fill="#ff8e9e"
      rx="25.471"
      ry="20.283"
      transform="matrix(-1 -.003 .003 -1 674.457 384.69)"
    />
    <path
      d="m204.5 152.042c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z"
      fill="#313d40"
    />
    <path
      d="m332.5 152.042c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z"
      fill="#313d40"
    />
    <path
      d="m288.235 165.776c-3.737-1.789-8.215-.206-10.001 3.531-1.666 3.484-5.291 5.735-9.234 5.735s-7.568-2.251-9.234-5.735c-1.787-3.737-6.266-5.317-10.001-3.531-3.737 1.787-5.318 6.265-3.531 10.001 4.144 8.666 13.08 14.265 22.766 14.265s18.623-5.599 22.766-14.265c1.787-3.736.206-8.214-3.531-10.001z"
      fill="#313d40"
    />
  </svg>
)

export const Droplet: React.FunctionComponent<HTMLAttributes<any>> = ({ className }) => (
  <svg viewBox="0 0 497 497" className={className}>
    <title>Pluvieux / Rainy</title>
    <path
      d="m309.919 133.207c-.468-.47-.936-.938-1.401-1.4l-.062-.062c-6.067-5.962-15.873-5.937-21.904.062-37.318 37.113-89.018 102.677-89.018 155.067v.004h.062c0 56.454 44.976 99.359 99.936 99.359 15.369.001 29.922-3.449 42.927-9.607z"
      fill="#7ce3ff"
    />
    <path
      d="m397.472 286.876h.062c0-52.834-49.865-115.804-87.615-153.668-24.052 34.546-49.863 81.33-49.863 123.61h.08c0 55.421 33.281 100.811 80.323 119.812 33.72-15.967 57.013-50.158 57.013-89.754z"
      fill="#b9f0ff"
    />
    <g fill="#7ce3ff">
      <path d="m121.642 348.958c-.187-.188-.374-.375-.56-.56l-.025-.025c-2.427-2.385-6.349-2.375-8.762.025-14.927 14.845-35.607 41.07-35.607 62.026v.002h.025c0 22.581 17.99 39.743 39.974 39.743 6.148 0 11.969-1.379 17.171-3.843 13.488-6.386 22.805-20.063 22.805-35.901h.025c.001-21.133-19.946-46.321-35.046-61.467z" />
      <path d="m372.01 395.789c-.187-.188-.374-.375-.56-.56l-.025-.025c-2.427-2.385-6.349-2.375-8.762.025-14.927 14.845-35.607 41.07-35.607 62.026v.002h.024c0 22.581 17.991 39.743 39.975 39.743 6.147 0 11.969-1.38 17.171-3.843 13.488-6.387 22.805-20.063 22.805-35.901h.025c0-21.134-19.946-46.322-35.046-61.467z" />
      <path d="m127.747 74.905c-.328-.329-.655-.657-.98-.98l-.043-.043c-4.247-4.173-11.111-4.156-15.333.043-26.122 25.979-62.313 71.874-62.313 108.547v.003h.043c0 39.518 31.483 69.551 69.955 69.551 10.758.001 20.946-2.414 30.049-6.725z" />
    </g>
    <path
      d="m127.747 74.905c-31.742 52.998-22.893 127.309 21.378 170.396 23.604-11.177 39.909-35.11 39.909-62.828h.043c.001-36.984-34.905-81.063-61.33-107.568z"
      fill="#b9f0ff"
    />
    <path
      d="m404.115 2.958c-.234-.235-.468-.469-.7-.7l-.031-.031c-3.033-2.981-7.936-2.968-10.952.031-18.659 18.557-44.509 51.338-44.509 77.533v.002h.031c0 28.227 22.488 49.679 49.968 49.679 7.684.001 14.961-1.724 21.464-4.803z"
      fill="#7ce3ff"
    />
    <path d="" fill="#b9f0ff" />
    <path
      d="m404.115 2.958c-.178.255-.356.517-.534.774-.005.007-.009.013-.014.02-.921 1.335-1.64 2.803-2.111 4.355-11.987 39.452-5.484 82.353 17.93 116.562 16.86-7.983 28.507-25.079 28.507-44.877h.031c-.001-26.417-24.934-57.902-43.809-76.834z"
      fill="#b9f0ff"
    />
    <path
      d="m74.5 173.537c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z"
      fill="#313d40"
    />
    <path
      d="m162.5 173.537c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z"
      fill="#313d40"
    />
    <path
      d="m138.235 184.271c-3.737-1.789-8.215-.206-10.001 3.531-1.666 3.484-5.291 5.735-9.234 5.735s-7.568-2.251-9.234-5.735c-1.787-3.737-6.266-5.317-10.001-3.531-3.737 1.787-5.318 6.265-3.531 10.001 4.144 8.666 13.08 14.265 22.766 14.265s18.623-5.599 22.766-14.265c1.787-3.737.206-8.215-3.531-10.001z"
      fill="#313d40"
    />
    <path
      d="m227.975 40.025c-.094-.094-.187-.188-.28-.28l-.012-.012c-1.213-1.192-3.175-1.188-4.381.012-7.464 7.423-17.804 20.535-17.804 31.013v.001h.012c0 11.291 8.995 19.872 19.987 19.872 3.074 0 5.984-.69 8.585-1.921 6.744-3.193 11.403-10.031 11.403-17.951h.012c.001-10.567-9.972-23.161-17.522-30.734z"
      fill="#7ce3ff"
    />
    <path
      d="m22.477 277.775c-.094-.094-.187-.188-.28-.28l-.012-.012c-1.213-1.192-3.175-1.188-4.381.012-7.464 7.423-17.804 20.535-17.804 31.013v.001h.012c0 11.291 8.995 19.872 19.987 19.872 3.074 0 5.984-.69 8.585-1.921 6.744-3.193 11.403-10.031 11.403-17.951h.013c0-10.567-9.973-23.161-17.523-30.734z"
      fill="#7ce3ff"
    />
    <path
      d="m234.5 282.042c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z"
      fill="#313d40"
    />
    <path
      d="m362.5 282.042c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z"
      fill="#313d40"
    />
    <path
      d="m318.235 295.776c-3.737-1.789-8.215-.206-10.001 3.531-1.666 3.484-5.291 5.735-9.234 5.735s-7.568-2.251-9.234-5.735c-1.787-3.737-6.266-5.317-10.001-3.531-3.737 1.787-5.318 6.265-3.531 10.001 4.144 8.666 13.08 14.265 22.766 14.265s18.623-5.599 22.766-14.265c1.787-3.736.206-8.214-3.531-10.001z"
      fill="#313d40"
    />
    <path
      d="m479.477 165.358c-.094-.094-.187-.188-.28-.28l-.012-.012c-1.213-1.192-3.175-1.188-4.381.012-7.464 7.422-17.804 20.535-17.804 31.013v.001h.012c0 11.291 8.995 19.872 19.987 19.872 3.074 0 5.984-.69 8.585-1.921 6.744-3.193 11.403-10.031 11.403-17.951h.013c0-10.568-9.973-23.162-17.523-30.734z"
      fill="#7ce3ff"
    />
  </svg>
)
export const Hot: React.FunctionComponent<HTMLAttributes<any>> = ({ className }) => (
  <svg viewBox="0 0 497 497" className={className}>
    <path
      d="m249.467 283.931v-223.931c0-33.137-26.863-60-60-60s-60 26.863-60 60v223.931c-32.965 20.243-55 56.63-55 98.069 0 63.411 51.589 115 115 115s115-51.589 115-115c0-41.439-22.035-77.826-55-98.069z"
      fill="#b9f0ff"
    />
    <path d="m219.467 60c0-16.542-13.458-30-30-30s-30 13.458-30 30v43.931h60z" fill="#7ce3ff" />
    <path d="m159.467 103.931h60v226.782h-60z" fill="#ea5b70" />
    <path d="m189.467 467c-46.869 0-85-38.131-85-85s38.131-85 85-85 85 38.131 85 85-38.131 85-85 85z" fill="#ff8e9e" />
    <path
      d="m150.588 382c0-1.199.026-2.392.075-3.579 0-.026.003-.052.003-.078.707-16.611 6.21-31.997 15.148-44.82 12.418-16.822 31.501-28.518 53.633-31.048-2.271-.859-4.575-1.634-6.933-2.3-27.181-7.679-57.487-1.473-79.849 18.655l-.024.009-.008.019c-17.28 15.569-28.165 38.105-28.165 63.141 0 46.869 38.131 85 85 85 7.99 0 15.724-1.11 23.06-3.181-35.701-10.074-61.94-42.939-61.94-81.818z"
      fill="#ea5b70"
    />
    <g fill="#313d40">
      <path d="m145.467 360.5c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z" />
      <path d="m233.467 360.5c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z" />
      <path d="m209.202 379.234c-3.737-1.789-8.215-.206-10.001 3.531-1.666 3.484-5.291 5.735-9.234 5.735s-7.568-2.251-9.234-5.735c-1.787-3.737-6.266-5.317-10.001-3.531-3.737 1.787-5.318 6.265-3.531 10.001 4.144 8.666 13.08 14.265 22.766 14.265s18.623-5.599 22.766-14.265c1.787-3.736.206-8.214-3.531-10.001z" />
      <path d="m179.467 216.431h-20c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h20c4.143 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5z" />
      <path d="m179.467 246.431h-20c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h20c4.143 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5z" />
      <path d="m179.467 186.431h-20c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h20c4.143 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5z" />
      <path d="m179.467 156.431h-20c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h20c4.143 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5z" />
      <path d="m179.467 126.431h-20c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h20c4.143 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5z" />
      <path d="m179.467 96.431h-20c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h20c4.143 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5z" />
      <path d="m159.467 81.431h20c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.5-7.5h-20c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5z" />
    </g>
    <path
      d="m422.533 227.725c0-15.891-14.998-34.83-26.352-46.219-.141-.141-.281-.282-.421-.421l-.019-.019c-1.811-1.811-4.741-1.817-6.558-.011-1.604 1.594-3.299 3.37-5.023 5.278-7.113-11.741-16.615-22.757-24.732-30.898-.189-.19-.378-.379-.566-.566l-.025-.025c-2.406-2.432-6.334-2.469-8.761-.058-11.401 11.323-26.159 29.258-32.678 46.497-.993-1.073-1.973-2.093-2.919-3.042-.11-.111-.219-.221-.328-.329l-.014-.014c-1.423-1.399-3.724-1.393-5.14.014l-9.969 17.37c-12.147 21.166-10.062 48.747 8.263 67.478 12.641 12.921 29.947 20.215 48.023 20.239 37.69-.051 67.979-31.065 67.204-68.695l-.004-6.58h.019z"
      fill="#ffb357"
    />
    <path
      d="m358.721 203.417c-.129-.129-.257-.258-.385-.385l-.017-.017c-1.668-1.64-4.365-1.633-6.024.017-10.262 10.206-24.48 28.236-24.48 42.643v.001h.017c0 15.524 12.368 27.323 27.482 27.323 4.227 0 8.229-.948 11.805-2.642 9.273-4.391 15.679-13.793 15.679-24.682h.017c0-14.528-13.713-31.845-24.094-42.258z"
      fill="#fce3a0"
    />
    <title>Chaud / Hot</title>
  </svg>
)
export const Cold: React.FunctionComponent<HTMLAttributes<any>> = ({ className }) => (
  <svg viewBox="0 0 497 497" className={className}>
    <path
      d="m244.749 283.931v-223.931c0-33.137-26.863-60-60-60s-60 26.863-60 60v223.931c-32.965 20.243-55 56.63-55 98.069 0 63.411 51.589 115 115 115s115-51.589 115-115c0-41.439-22.034-77.826-55-98.069z"
      fill="#b9f0ff"
    />
    <path d="m214.749 60c0-16.542-13.458-30-30-30s-30 13.458-30 30v163.931h60z" fill="#7ce3ff" />
    <path d="m154.749 223.931h60v106.782h-60z" fill="#64b3fb" />
    <path d="m184.749 467c-46.869 0-85-38.131-85-85s38.131-85 85-85 85 38.131 85 85-38.13 85-85 85z" fill="#88c5fd" />
    <path
      d="m145.87 382c0-1.199.026-2.392.075-3.579 0-.026.003-.052.003-.078.707-16.611 6.21-31.997 15.148-44.82 12.418-16.822 31.501-28.518 53.633-31.048-2.271-.859-4.575-1.634-6.933-2.3-27.181-7.679-57.487-1.473-79.849 18.655l-.024.009-.008.019c-17.28 15.569-28.165 38.105-28.165 63.141 0 46.869 38.131 85 85 85 7.99 0 15.724-1.11 23.06-3.181-35.7-10.074-61.94-42.939-61.94-81.818z"
      fill="#64b3fb"
    />
    <g fill="#313d40">
      <path d="m140.749 360.5c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.357-7.5-7.5-7.5z" />
      <path d="m228.749 360.5c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.357-7.5-7.5-7.5z" />
      <path d="m204.485 379.234c-3.737-1.789-8.215-.206-10.001 3.531-1.666 3.484-5.291 5.735-9.234 5.735s-7.568-2.251-9.234-5.735c-1.787-3.737-6.266-5.317-10.001-3.531-3.737 1.787-5.318 6.265-3.531 10.001 4.144 8.666 13.08 14.265 22.766 14.265s18.623-5.599 22.766-14.265c1.787-3.736.206-8.214-3.531-10.001z" />
      <path d="m174.749 216.431h-20c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h20c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.5-7.5z" />
      <path d="m174.749 246.431h-20c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h20c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.5-7.5z" />
      <path d="m174.749 186.431h-20c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h20c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.5-7.5z" />
      <path d="m174.749 156.431h-20c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h20c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.5-7.5z" />
      <path d="m174.749 126.431h-20c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h20c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.5-7.5z" />
      <path d="m174.749 96.431h-20c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h20c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.5-7.5z" />
      <path d="m154.749 81.431h20c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.5-7.5h-20c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5z" />
    </g>
    <path
      d="m421.641 223.491-4.569-3.668 4.569-3.67c6.46-5.187 7.492-14.628 2.306-21.087-5.185-6.46-14.628-7.494-21.087-2.306l-17.666 14.184-17.944 8.142v-4.021l21.664-17.392c6.46-5.187 7.492-14.628 2.307-21.088-5.188-6.459-14.625-7.492-21.088-2.307l-2.883 2.314v-4.592c0-8.284-6.716-15-15-15s-15 6.716-15 15v4.592l-2.882-2.313c-6.46-5.185-15.901-4.152-21.088 2.307-5.186 6.46-4.153 15.901 2.307 21.088l21.663 17.392v4.021l-17.943-8.142-17.667-14.185c-6.461-5.186-15.901-4.152-21.087 2.307-5.187 6.46-4.154 15.901 2.306 21.087l4.57 3.67-4.57 3.668c-6.46 5.187-7.492 14.628-2.307 21.088 2.963 3.69 7.315 5.61 11.707 5.61 3.294 0 6.611-1.081 9.381-3.304l11.949-9.593 13.752 6.241-7.001 7.736h-20.41c-8.284 0-15 6.716-15 15s6.716 15 15 15h12.067v6.73c0 8.284 6.716 15 15 15s15-6.716 15-15v-15.951l10.253-11.33 10.254 11.331v15.95c0 8.284 6.716 15 15 15s15-6.716 15-15v-6.73h12.067c8.284 0 15-6.716 15-15s-6.716-15-15-15h-20.411l-7.001-7.736 13.752-6.24 11.948 9.592c2.77 2.223 6.086 3.304 9.381 3.304 4.392 0 8.744-1.92 11.707-5.61 5.186-6.461 4.154-15.902-2.306-21.089z"
      fill="#64b3fb"
    />
    <title>Froid / Cold</title>
  </svg>
)
export const Autumn: React.FunctionComponent<HTMLAttributes<any>> = ({ className }) => (
  <svg viewBox="0 0 497 497" className={className}>
    <path
      d="m272.983 13.749c-5.219-8.609-14.363-13.749-24.46-13.749 0 0 0 0-.001 0-10.095 0-19.241 5.139-24.462 13.749-19.797 32.647-32.297 69.317-36.695 107.242-15.778-8.978-32.601-15.921-50.246-20.725-10.008-2.722-20.384.044-27.747 7.409-7.401 7.406-10.177 17.842-7.428 27.919 5.974 21.889 12.508 34.629 20.78 50.757 4.499 8.773 9.505 18.533 15.279 31.522-30.642-24.348-66.287-41.682-104.544-50.672-9.263-2.178-18.785.53-25.491 7.236-6.699 6.699-9.403 16.216-7.232 25.46 10.759 45.81 33.237 87.475 65.438 121.608-3.07 1.616-6.088 3.301-9.042 5.045-8.328 4.917-13.299 13.647-13.296 23.353.003 9.759 5.012 18.538 13.399 23.483 33.475 19.743 71.796 30.179 110.822 30.179 27.453 0 57.61-5.756 80.465-15.204l34.707-356.066c-3.163-6.308-6.577-12.497-10.246-18.546z"
      fill="#ff6f4d"
    />
    <path
      d="m488.966 174.451c-6.694-6.701-16.187-9.41-25.38-7.249-38.312 9.003-73.983 26.446-104.526 50.694 6.23-14.171 11.42-24.238 16.06-33.24 7.817-15.163 13.991-27.14 19.961-48.997 2.72-9.956-.127-20.68-7.43-27.99-7.354-7.359-17.714-10.125-27.729-7.403-17.644 4.804-34.466 11.747-50.244 20.725-3.583-30.897-12.547-60.961-26.451-88.697-52.267 42.001-85.442 104.264-92.027 171.002-6.6 66.891 14.067 133.615 57.32 185.064 22.854 9.448 53.01 15.204 80.464 15.204 39.026 0 77.348-10.436 110.823-30.178 8.385-4.946 13.395-13.725 13.397-23.484.003-9.705-4.968-18.435-13.293-23.352-2.955-1.745-5.973-3.429-9.043-5.045 32.147-34.078 54.606-75.667 65.385-121.386 2.198-9.307-.528-18.904-7.287-25.668z"
      fill="#ff8f71"
    />
    <path
      d="m421.592 239.189c-4.679-6.835-14.012-8.586-20.851-3.906l-137.22 93.92v-77.583l55.585-55.585c5.858-5.858 5.858-15.355 0-21.213-5.857-5.858-15.355-5.858-21.213 0l-34.372 34.372v-32.348c0-8.077-6.207-15.027-14.275-15.407-8.614-.406-15.725 6.458-15.725 14.983v32.814l-34.415-34.415c-5.857-5.858-15.355-5.858-21.213 0s-5.858 15.355 0 21.213l55.628 55.628v77.569l-137.262-93.948c-6.838-4.679-16.173-2.93-20.851 3.906-4.68 6.836-2.931 16.171 3.905 20.851l78.918 54.015-31.415 18.626c-7.126 4.225-9.478 13.426-5.252 20.552 2.802 4.727 7.793 7.353 12.917 7.353 2.601 0 5.236-.677 7.636-2.1l43.418-25.743 39.283 26.887c5.575 3.816 9.209 10.407 8.568 18.137l-7.817 94.314c-1.106 13.339 9.36 24.804 22.743 24.918 13.536.115 24.248-11.42 23.134-24.91l-7.791-94.356c-.637-7.712 2.99-14.314 8.569-18.133 0 0 39.24-26.857 39.24-26.857l43.418 25.743c2.4 1.423 5.035 2.1 7.636 2.1 5.123 0 10.115-2.626 12.917-7.353 4.226-7.126 1.874-16.328-5.252-20.552l-31.415-18.626 78.918-54.015c6.836-4.679 8.586-14.014 3.906-20.851z"
      fill="#ec5334"
    />
    <g fill="#313d40">
      <path d="m214.501 150.892c2.071-.001 3.946-.84 5.303-2.197s2.196-3.232 2.197-5.304v-10c0-4.143-3.358-7.5-7.5-7.5-4.143.001-7.499 3.358-7.5 7.501v10c0 4.141 3.357 7.499 7.5 7.5z" />
      <path d="m287.803 148.694c1.357-1.357 2.196-3.232 2.197-5.303v-10c0-4.143-3.358-7.501-7.5-7.501-4.143.001-7.5 3.358-7.5 7.5v10c0 4.143 3.358 7.5 7.5 7.501 2.071 0 3.946-.839 5.303-2.197z" />
      <path d="m248.999 156.109h.004c7.994 0 15.359-4.6 18.764-11.718 1.788-3.736.208-8.215-3.529-10.002-3.736-1.791-8.215-.207-10.002 3.529-.913 1.908-3.016 3.19-5.234 3.19 0 0 0 0-.001 0-2.218 0-4.321-1.281-5.233-3.188-1.788-3.737-6.266-5.317-10.001-3.531-3.737 1.787-5.318 6.265-3.532 10.002 3.402 7.119 10.768 11.718 18.764 11.718z" />
    </g>
  </svg>
)
export const SnowMan: React.FunctionComponent<HTMLAttributes<any>> = ({ className }) => (
  <svg viewBox="0 0 497 497" className={className}>
    <path d="m336.381 436h-87.881v61h87.881c16.844 0 30.5-13.655 30.5-30.5s-13.655-30.5-30.5-30.5z" fill="#efedee" />
    <path d="m160.619 436c-16.844 0-30.5 13.655-30.5 30.5s13.656 30.5 30.5 30.5h87.881v-61z" fill="#d4d4d5" />
    <circle cx="248.5" cy="45" fill="#d4d4d5" r="45" />
    <path
      d="m248.5 45c-66.74 0-121.037 54.297-121.037 121.037h242.074c0-66.74-54.297-121.037-121.037-121.037z"
      fill="#ff8e9e"
    />
    <path
      d="m248.5 45c-66.74 0-121.037 54.297-121.037 121.037h77.168v-51.408c14.812-31.433 42.742-55.515 76.706-65.1-10.446-2.948-21.46-4.529-32.837-4.529z"
      fill="#ea5b70"
    />
    <path
      d="m248.5 108.314c-46.987 0-91.463 21.211-121.037 57.723 0 66.74 54.297 121.037 121.037 121.037s121.037-54.297 121.037-121.037c-29.574-36.512-74.05-57.723-121.037-57.723z"
      fill="#efedee"
    />
    <path
      d="m127.463 166.037c0 66.74 54.297 121.037 121.037 121.037 11.377 0 22.391-1.581 32.837-4.529-50.835-14.347-88.2-61.145-88.2-116.508 0-18.374 4.136-35.794 11.494-51.408-30.018 8.814-57.045 26.564-77.168 51.408z"
      fill="#d4d4d5"
    />
    <ellipse
      cx="187.593"
      cy="180.488"
      fill="#ff8e9e"
      rx="22.474"
      ry="17.897"
      transform="matrix(1 .003 -.003 1 .566 -.587)"
    />
    <ellipse
      cx="309.407"
      cy="180.869"
      fill="#ff8e9e"
      rx="22.474"
      ry="17.897"
      transform="matrix(-1 -.003 .003 -1 618.247 362.707)"
    />
    <g fill="#313d40">
      <path d="m194.5 143.037c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z" />
      <path d="m302.5 143.037c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z" />
      <path d="m268.235 171.771c-3.737-1.789-8.215-.206-10.001 3.531-1.666 3.484-5.291 5.735-9.234 5.735s-7.568-2.251-9.234-5.735c-1.787-3.737-6.266-5.317-10.001-3.531-3.737 1.787-5.318 6.265-3.531 10.001 4.144 8.666 13.08 14.265 22.766 14.265s18.623-5.599 22.766-14.265c1.787-3.737.206-8.215-3.531-10.001z" />
    </g>
    <circle cx="248.5" cy="150.032" fill="#ff6f4d" r="15" />
    <path
      d="m222.666 245.175c-57.878 11.938-101.392 63.186-101.392 124.599 0 70.265 56.961 127.226 127.226 127.226 4.671 0 9.281-.259 13.822-.75z"
      fill="#d4d4d5"
    />
    <path
      d="m375.726 369.774c0-70.265-56.961-127.226-127.226-127.226-8.852 0-17.492.906-25.834 2.627-31.241 38.056-45.914 86.113-37.823 134.68 8.015 48.108 36.233 90.453 77.479 116.395 63.762-6.89 113.404-60.882 113.404-126.476z"
      fill="#efedee"
    />
    <circle cx="248.5" cy="302.074" fill="#4c5659" r="15" />
    <circle cx="248.5" cy="362.074" fill="#4c5659" r="15" />
    <circle cx="248.5" cy="422.074" fill="#4c5659" r="15" />
    <path
      d="m421.908 271.906 5.357-5.357c5.858-5.858 5.858-15.355 0-21.213-5.857-5.858-15.355-5.858-21.213 0l-5.357 5.357c-2.13-5.691-7.603-9.75-14.037-9.75-8.284 0-15 6.716-15 15v23.787l-25.606 25.606c-5.858 5.858-5.858 15.355 0 21.213 2.929 2.929 6.768 4.394 10.606 4.394s7.678-1.464 10.606-4.394l25.606-25.606h23.787c8.284 0 15-6.716 15-15 .001-6.435-4.059-11.907-9.749-14.037z"
      fill="#ce857a"
    />
    <path
      d="m75.092 271.906-5.357-5.357c-5.858-5.858-5.858-15.355 0-21.213 5.857-5.858 15.355-5.858 21.213 0l5.357 5.357c2.13-5.691 7.603-9.75 14.037-9.75 8.284 0 15 6.716 15 15v23.787l25.606 25.606c5.858 5.858 5.858 15.355 0 21.213-2.929 2.929-6.768 4.394-10.606 4.394s-7.678-1.464-10.606-4.394l-25.606-25.606h-23.788c-8.284 0-15-6.716-15-15 0-6.435 4.06-11.907 9.75-14.037z"
      fill="#c77464"
    />
    <title>Neige / Snow</title>
  </svg>
)
export const Sakura: React.FunctionComponent<HTMLAttributes<any>> = ({ className }) => (
  <svg viewBox="0 0 512.001 512.001" className={className}>
    <title>Sakura</title>
    <path
      style={{ fill: "#F0BDD5" }}
      d="M166.813,145.528l89.188,122.756l89.187-122.756c15.984-22.001,15.984-51.792,0-73.793l-37.55-51.684
c-7.637-10.512-22.958-11.473-31.849-1.997l-10.257,10.931c-5.163,5.503-13.9,5.502-19.063,0l-10.256-10.931
c-8.891-9.476-24.211-8.515-31.849,1.997l-37.551,51.684C150.829,93.736,150.829,123.527,166.813,145.528z"
    />
    <path
      style={{ opacity: 0.3, fill: "#FFFFFF" }}
      d="M222.348,192.343l33.653,75.941l33.653-75.941
c5.461-12.324,5.694-26.336,0.644-38.835l-13.758-34.051c-1.951-4.83-8.5-5.531-11.43-1.225l-4.096,6.02
c-2.406,3.535-7.617,3.535-10.023,0l-4.096-6.02c-2.93-4.307-9.479-3.605-11.43,1.225l-13.758,34.052
C216.654,166.007,216.887,180.019,222.348,192.343z"
    />
    <path
      style={{ fill: "#F0BDD5" }}
      d="M111.693,315.173l144.308-46.889l-89.188-122.756c-15.985-22.001-44.318-31.207-70.181-22.803
l-60.758,19.741c-12.358,4.015-18.006,18.289-11.742,29.673l7.226,13.133c3.638,6.611,0.938,14.92-5.891,18.13l-13.565,6.376
c-11.759,5.528-15.58,20.395-7.942,30.908l37.551,51.684C57.496,314.37,85.829,323.576,111.693,315.173z"
    />
    <g>
      <path
        style={{ opacity: 0.2, fill: "#FFFFFF" }}
        d="M111.693,315.173l144.308-46.889l-89.188-122.756
c-15.985-22.001-44.318-31.207-70.181-22.803l-60.758,19.741c-12.358,4.015-18.006,18.289-11.742,29.673l7.226,13.133
c3.638,6.611,0.938,14.92-5.891,18.13l-13.565,6.376c-11.759,5.528-15.58,20.395-7.942,30.908l37.551,51.684
C57.496,314.37,85.829,323.576,111.693,315.173z"
      />
      <path
        style={{ opacity: 0.3, fill: "#FFFFFF" }}
        d="M173.378,276.823l82.623-8.539l-61.825-55.473
c-10.033-9.003-23.288-13.553-36.735-12.613l-36.636,2.562c-5.196,0.363-7.887,6.374-4.697,10.492l4.459,5.756
c2.619,3.381,1.008,8.337-3.097,9.533l-6.991,2.036c-5.001,1.456-6.357,7.901-2.367,11.249l28.133,23.607
C146.571,274.1,159.969,278.209,173.378,276.823z"
      />
    </g>
    <path
      style={{ fill: "#F0BDD5" }}
      d="M256.001,420.019V268.284l-144.308,46.889c-25.864,8.404-43.374,32.505-43.374,59.7v63.885
c0,12.994,11.829,22.776,24.592,20.336l14.723-2.815c7.411-1.417,14.479,3.719,15.422,11.205l1.873,14.872
c1.623,12.892,14.582,21.12,26.94,17.105l60.758-19.742C238.49,471.315,256.001,447.213,256.001,420.019z"
    />
    <path
      style={{ opacity: 0.15, fill: "#E978A0" }}
      d="M256.001,420.019V268.284l-144.308,46.889
c-25.864,8.404-43.374,32.505-43.374,59.7v63.885c0,12.994,11.829,22.776,24.592,20.336l14.723-2.815
c7.411-1.417,14.479,3.719,15.422,11.205l1.873,14.872c1.623,12.892,14.582,21.12,26.94,17.105l60.758-19.742
C238.49,471.315,256.001,447.213,256.001,420.019z"
    />
    <path
      style={{ opacity: 0.3, fill: "#FFFFFF" }}
      d="M238.59,349.502l17.411-81.218l-71.863,41.657
c-11.662,6.76-20.086,17.96-23.347,31.04l-8.884,35.635c-1.26,5.054,3.625,9.471,8.527,7.71l6.853-2.462
c4.024-1.446,8.241,1.617,8.109,5.892l-0.224,7.278c-0.161,5.206,5.55,8.488,9.967,5.728l31.146-19.461
C227.716,374.155,235.764,362.683,238.59,349.502z"
    />
    <path
      style={{ fill: "#F0BDD5" }}
      d="M400.309,315.173l-144.308-46.889l89.187-122.756c15.984-22.001,44.318-31.207,70.181-22.803
l60.758,19.741c12.358,4.015,18.006,18.289,11.742,29.673l-7.226,13.133c-3.638,6.611-0.938,14.92,5.891,18.13l13.565,6.376
c11.759,5.528,15.58,20.395,7.942,30.908L470.49,292.37C454.506,314.37,426.173,323.576,400.309,315.173z"
    />
    <path
      style={{ opacity: 0.15, fill: "#E978A0" }}
      d="M400.309,315.173l-144.308-46.889l89.187-122.756
c15.984-22.001,44.318-31.207,70.181-22.803l60.758,19.741c12.358,4.015,18.006,18.289,11.742,29.673l-7.226,13.133
c-3.638,6.611-0.938,14.92,5.891,18.13l13.565,6.376c11.759,5.528,15.58,20.395,7.942,30.908L470.49,292.37
C454.506,314.37,426.173,323.576,400.309,315.173z"
    />
    <path
      style={{ opacity: 0.3, fill: "#FFFFFF" }}
      d="M338.624,276.823l-82.623-8.539l61.825-55.473
c10.033-9.003,23.288-13.553,36.735-12.613l36.636,2.562c5.196,0.363,7.887,6.374,4.697,10.492l-4.459,5.756
c-2.619,3.381-1.008,8.337,3.097,9.533l6.991,2.036c5.001,1.456,6.358,7.901,2.367,11.249l-28.133,23.607
C365.431,274.1,352.033,278.209,338.624,276.823z"
    />
    <path
      style={{ fill: "#F0BDD5" }}
      d="M256.001,420.019V268.284l144.308,46.889c25.863,8.404,43.374,32.505,43.374,59.7v63.885
c0,12.994-11.829,22.776-24.592,20.336l-14.723-2.815c-7.411-1.417-14.479,3.719-15.422,11.205l-1.872,14.872
c-1.623,12.892-14.582,21.12-26.94,17.105l-60.758-19.742C273.512,471.315,256.001,447.213,256.001,420.019z"
    />
    <path
      style={{ opacity: 0.3, fill: "#FFFFFF" }}
      d="M273.412,349.502l-17.411-81.218l71.863,41.657
c11.663,6.76,20.086,17.96,23.347,31.04l8.884,35.635c1.26,5.054-3.625,9.471-8.527,7.71l-6.853-2.462
c-4.024-1.446-8.241,1.617-8.109,5.892l0.224,7.278c0.161,5.206-5.55,8.488-9.967,5.728l-31.146-19.461
C284.286,374.155,276.238,362.683,273.412,349.502z"
    />
    <g style={{ opacity: 0.05 }}>
      <path
        d="M256.001,93.248c-4.142,0-7.5-3.358-7.5-7.5V62.465c0-4.142,3.358-7.5,7.5-7.5s7.5,3.358,7.5,7.5v23.283
C263.501,89.891,260.143,93.248,256.001,93.248z"
      />
      <path
        d="M82.401,219.379c-0.768,0-1.549-0.119-2.319-0.369l-22.144-7.195c-3.939-1.28-6.096-5.511-4.815-9.45
c1.28-3.94,5.511-6.097,9.45-4.815l22.144,7.195c3.939,1.28,6.096,5.511,4.815,9.45C88.502,217.364,85.562,219.379,82.401,219.379z
"
      />
      <path
        d="M135.018,442.295c-1.528,0-3.071-0.466-4.402-1.433c-3.351-2.435-4.094-7.124-1.659-10.476l13.686-18.836
c2.434-3.352,7.124-4.095,10.476-1.659c3.351,2.435,4.094,7.125,1.659,10.476l-13.686,18.836
C139.624,441.223,137.337,442.295,135.018,442.295z"
      />
      <path
        d="M376.984,442.295c-2.319,0-4.606-1.072-6.074-3.092l-13.686-18.836c-2.435-3.351-1.692-8.041,1.659-10.476
c3.352-2.435,8.042-1.691,10.476,1.659l13.686,18.836c2.435,3.351,1.692,8.041-1.659,10.476
C380.055,441.83,378.513,442.295,376.984,442.295z"
      />
      <path
        d="M429.601,219.379c-3.162,0-6.102-2.015-7.131-5.185c-1.28-3.939,0.876-8.17,4.815-9.45l22.143-7.195
c3.938-1.282,8.17,0.875,9.45,4.815c1.28,3.939-0.876,8.17-4.815,9.45l-22.144,7.195
C431.15,219.261,430.369,219.379,429.601,219.379z"
      />
    </g>
  </svg>
)
export const Arctic: React.FunctionComponent<HTMLAttributes<any>> = ({ className }) => (
  <svg viewBox="0 0 497 497" className={className}>
    <title>Glacial / Arctic</title>
    <path
      d="m329.713 81.269c11.716-11.716 11.716-30.711 0-42.427-11.715-11.716-30.711-11.716-42.426 0l-8.787 8.787v-17.005c0-16.346-12.816-30.164-29.156-30.613-16.954-.465-30.844 13.14-30.844 29.989v17.629l-8.787-8.787c-11.715-11.716-30.711-11.716-42.426 0-11.716 11.716-11.716 30.711 0 42.427l51.213 51.213v38.858c0 6.402-3.065 12.417-8.244 16.18l-22.446 16.308c-5.179 3.763-11.847 4.819-17.936 2.841l-29.777-9.675-32.881-64.532c-7.521-14.762-25.585-20.633-40.351-13.11-14.763 7.522-20.632 25.587-13.11 40.35l5.642 11.072-20.118-6.537c-15.758-5.123-32.684 3.504-37.802 19.261-5.12 15.758 3.503 32.682 19.261 37.802l20.119 6.537-10.507 5.354c-14.896 7.59-21.276 26.194-13.493 40.99 5.356 10.183 15.771 16.035 26.572 16.034 4.581 0 9.233-1.054 13.596-3.276l64.532-32.881 29.56 9.605c6.089 1.978 10.862 6.752 12.841 12.841l10.642 32.751c1.979 6.089.922 12.757-2.841 17.936l-20.568 28.31-71.535 11.33c-16.364 2.592-27.529 17.959-24.937 34.324 2.593 16.365 17.953 27.533 34.324 24.938l12.273-1.944-12.074 16.619c-9.677 13.319-7.301 32.175 5.848 42.082 5.421 4.085 11.758 6.049 18.039 6.049 9.276 0 18.425-4.29 24.295-12.368l12.434-17.114 1.944 12.273c2.338 14.774 15.091 25.31 29.591 25.31 1.56 0 3.142-.122 4.73-.374 16.364-2.592 27.529-17.959 24.938-34.324l-11.33-71.534 30.915-42.55 10.373-60c-6.222 0-11.465-3.995-13.292-9.619l-4.657-14.334c-1.864-5.736.178-12.019 5.057-15.563l12.193-8.859c4.879-3.545 11.485-3.545 16.364 0l.417.303 29.72-52.571-.075-.054c-5.179-3.763-8.244-9.778-8.244-16.18v-38.858z"
      fill="#7ce3ff"
    />
    <path
      d="m495.523 183.498c-5.119-15.757-22.042-24.38-37.802-19.261l-20.118 6.537 5.358-10.515c7.422-14.566 2.274-32.698-12.084-40.515-14.895-8.109-33.444-2.292-41.093 12.719l-32.881 64.532-29.777 9.675c-6.089 1.978-12.757.922-17.936-2.841l-22.371-16.254c-19.69 9.834-31.447 30.629-29.72 52.571l11.776 8.556c4.879 3.545 6.92 9.828 5.057 15.563l-4.657 14.334c-1.864 5.735-7.208 9.619-13.239 9.619h-15.018c-11.26 17.84-14.99 39.415-10.373 60h35.71l30.915 42.55-11.33 71.534c-2.592 16.365 8.573 31.732 24.938 34.324 1.59.252 3.17.374 4.73.374 14.499 0 27.253-10.537 29.594-25.311l1.944-12.273 12.434 17.114c5.87 8.08 15.018 12.368 24.295 12.368 6.285 0 12.63-1.969 18.054-6.061 13.137-9.911 15.505-28.757 5.832-42.07l-12.074-16.618 12.273 1.944c16.372 2.594 31.732-8.573 34.324-24.938s-8.573-31.731-24.938-34.324l-71.535-11.33-20.568-28.31c-3.763-5.179-4.819-11.847-2.841-17.936l10.642-32.751c1.978-6.089 6.752-10.862 12.841-12.841l29.56-9.605 64.532 32.881c4.363 2.223 9.014 3.276 13.596 3.276 10.801 0 21.219-5.853 26.574-16.037 7.78-14.796 1.398-33.399-13.497-40.988l-10.505-5.353 20.119-6.537c15.757-5.12 24.38-22.045 19.259-37.802z"
      fill="#b9f0ff"
    />
  </svg>
)
export const SunAndRain: React.FunctionComponent = () => (
  <svg viewBox="0 0 497 497">
    <path
      d="m175.365 5.917 20.865 18.871 27.505-5.91c11.5-2.471 23.002 4.17 26.612 15.365l8.635 26.775 26.775 8.635c11.195 3.61 17.835 15.112 15.365 26.612l-5.91 27.505 18.871 20.865c7.89 8.724 7.89 22.005 0 30.729l-18.871 20.865 5.91 27.505c2.471 11.5-4.17 23.002-15.365 26.612l-26.775 8.635-8.635 26.775c-3.61 11.195-15.112 17.835-26.612 15.365l-27.505-5.91-20.865 18.871c-8.724 7.89-22.005 7.89-30.729 0l-20.865-18.871-27.505 5.91c-11.5 2.471-23.002-4.17-26.612-15.365l-8.635-26.775-26.775-8.635c-11.195-3.61-17.835-15.112-15.365-26.612l5.91-27.505-18.872-20.864c-7.89-8.724-7.89-22.005 0-30.729l18.871-20.865-5.91-27.505c-2.471-11.5 4.17-23.002 15.365-26.612l26.775-8.635 8.635-26.775c3.61-11.195 15.112-17.835 26.612-15.365l27.505 5.91 20.865-18.871c8.724-7.89 22.006-7.89 30.73-.001z"
      fill="#ffb357"
    />
    <path
      d="m160 281.037c-66.74 0-121.037-54.297-121.037-121.037s54.297-121.037 121.037-121.037 121.037 54.297 121.037 121.037-54.297 121.037-121.037 121.037z"
      fill="#fce3a0"
    />
    <path
      d="m104.637 160c0-55.363 37.365-102.161 88.2-116.508-10.446-2.948-21.46-4.529-32.837-4.529-66.74 0-121.037 54.297-121.037 121.037s54.297 121.037 121.037 121.037c11.377 0 22.391-1.581 32.837-4.529-50.835-14.347-88.2-61.145-88.2-116.508z"
      fill="#ffce71"
    />
    <ellipse
      cx="99.093"
      cy="152.222"
      fill="#ff8e9e"
      rx="22.474"
      ry="17.897"
      transform="matrix(1 .003 -.003 1 .477 -.31)"
    />
    <ellipse
      cx="220.907"
      cy="152.603"
      fill="#ff8e9e"
      rx="22.474"
      ry="17.897"
      transform="matrix(-1 -.003 .003 -1 441.336 305.897)"
    />
    <g fill="#313d40">
      <path d="m106 115.037c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z" />
      <path d="m214 115.037c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z" />
      <path d="m179.735 133.771c-3.737-1.789-8.215-.206-10.001 3.531-1.666 3.484-5.291 5.735-9.234 5.735s-7.568-2.251-9.234-5.735c-1.787-3.737-6.266-5.317-10.001-3.531-3.737 1.787-5.318 6.265-3.531 10.001 4.144 8.666 13.08 14.265 22.766 14.265s18.623-5.599 22.766-14.265c1.787-3.737.206-8.215-3.531-10.001z" />
    </g>
    <path
      d="m366.697 115.509c-8.191-2.077-16.765-3.184-25.593-3.184-45.207 0-83.659 28.893-97.917 69.217v.005c-37.156.492-68.187 30.845-68.187 69.228 0 38.232 30.993 69.225 69.225 69.225h147.301z"
      fill="#b9bbbc"
    />
    <path
      d="m444.927 216.16c-.003-48.622-33.337-89.265-78.23-100.651-44.955 11.414-78.212 52.149-78.212 100.655 0 57.084 46.06 103.403 103.041 103.836h53.555c28.674 0 51.919-23.245 51.919-51.919 0-29.05-23.741-52.073-52.073-51.921z"
      fill="#d4d4d5"
    />
    <ellipse
      cx="279.093"
      cy="242.222"
      fill="#ff8e9e"
      rx="22.474"
      ry="17.897"
      transform="matrix(1 .003 -.003 1 .76 -.873)"
    />
    <ellipse
      cx="400.908"
      cy="242.603"
      fill="#ff8e9e"
      rx="22.474"
      ry="17.897"
      transform="matrix(-1 -.003 .003 -1 801.053 486.461)"
    />
    <path
      d="m286 205.037c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z"
      fill="#313d40"
    />
    <path
      d="m394 205.037c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z"
      fill="#313d40"
    />
    <path
      d="m359.735 223.771c-3.737-1.789-8.215-.206-10.001 3.531-1.666 3.484-5.291 5.735-9.234 5.735s-7.568-2.251-9.234-5.735c-1.787-3.737-6.266-5.317-10.001-3.531-3.737 1.787-5.318 6.265-3.531 10.001 4.144 8.666 13.08 14.265 22.766 14.265s18.623-5.599 22.766-14.265c1.787-3.737.206-8.215-3.531-10.001z"
      fill="#313d40"
    />
    <path
      d="m286.8 405.972.014.014c12.177-12.176 15.084-38.354 15.037-55.565v-.028c-.024-2.738-2.262-4.965-5.001-4.972-16.944-.047-43.639 3.109-55.565 15.036l-.001.001.014.014c-12.852 12.852-12.38 32.857.132 45.369 12.569 12.57 32.879 12.621 45.37.131z"
      fill="#7ce3ff"
    />
    <path
      d="m169.308 399.219.008.008c6.958-6.958 8.619-21.917 8.592-31.752v-.016c-.014-1.565-1.292-2.837-2.857-2.841-9.682-.027-24.936 1.777-31.752 8.592h-.001l.008.008c-7.344 7.344-7.074 18.776.075 25.925 7.183 7.184 18.789 7.213 25.927.076z"
      fill="#b9f0ff"
    />
    <path
      d="m377.997 397.384.011.011c9.352-9.352 11.585-29.458 11.549-42.677v-.022c-.018-2.103-1.737-3.813-3.841-3.819-13.014-.036-33.517 2.388-42.677 11.548l-.001.001.011.011c-9.871 9.871-9.508 25.236.101 34.846 9.654 9.655 25.254 9.694 34.847.101z"
      fill="#7ce3ff"
    />
    <path
      d="m209.569 432.573c-13.014-.036-33.517 2.388-42.677 11.548l-.001.001.011.011c-9.871 9.871-9.508 25.236.101 34.846 9.654 9.655 25.253 9.695 34.847.101l.011.011c9.352-9.352 11.585-29.458 11.549-42.677v-.022c-.018-2.103-1.737-3.813-3.841-3.819z"
      fill="#7ce3ff"
    />
    <path
      d="m120.703 427.116c-16.944-.046-43.639 3.109-55.565 15.036l-.001.001.014.014c-12.852 12.852-12.38 32.857.132 45.369 12.569 12.571 32.88 12.623 45.37.132l.014.014c12.177-12.177 15.084-38.355 15.037-55.565v-.028c-.024-2.739-2.262-4.966-5.001-4.973z"
      fill="#7ce3ff"
    />
    <path
      d="m313.512 443.326c-13.014-.036-33.517 2.388-42.677 11.548l-.001.001.011.011c-9.871 9.871-9.508 25.236.101 34.846 9.654 9.655 25.253 9.695 34.847.101l.011.011c9.352-9.352 11.585-29.458 11.549-42.677v-.022c-.019-2.103-1.738-3.814-3.841-3.819z"
      fill="#b9f0ff"
    />
    <path
      d="m404.675 446.314c-9.682-.027-24.936 1.777-31.752 8.592h-.001l.008.008c-7.344 7.344-7.074 18.776.075 25.925 7.183 7.184 18.789 7.213 25.926.075l.008.008c6.958-6.958 8.619-21.917 8.592-31.752v-.016c-.013-1.564-1.291-2.836-2.856-2.84z"
      fill="#7ce3ff"
    />
  </svg>
)
export const LightRain: React.FunctionComponent = () => (
  <svg viewBox="0 0 497 497">
    <path
      d="m295.88 4.914c-12.642-3.206-25.876-4.914-39.502-4.914-69.776 0-129.126 44.596-151.133 106.835v.007c-57.35.76-105.245 47.61-105.245 106.853 0 59.01 47.837 106.847 106.847 106.847h227.356z"
      fill="#d4d4d5"
    />
    <path
      d="m416.626 160.267c-.004-75.047-51.455-137.779-120.746-155.353-69.387 17.617-120.719 80.491-120.719 155.359 0 88.107 71.092 159.6 159.042 160.269h82.662c44.258 0 80.135-35.878 80.135-80.136 0-44.837-36.644-80.373-80.374-80.139z"
      fill="#efedee"
    />
    <ellipse
      cx="189.831"
      cy="194.305"
      fill="#ff8e9e"
      rx="29.212"
      ry="23.263"
      transform="matrix(1 .003 -.003 1 .61 -.594)"
    />
    <ellipse
      cx="348.169"
      cy="194.801"
      fill="#ff8e9e"
      rx="29.212"
      ry="23.263"
      transform="matrix(-1 -.003 .003 -1 695.727 390.692)"
    />
    <g fill="#313d40">
      <path d="m204.5 152.042c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z" />
      <path d="m332.5 152.042c-4.142 0-7.5 3.358-7.5 7.5v10c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-10c0-4.142-3.358-7.5-7.5-7.5z" />
      <path d="m288.235 165.776c-3.737-1.789-8.215-.206-10.001 3.531-1.666 3.484-5.291 5.735-9.234 5.735s-7.568-2.251-9.234-5.735c-1.787-3.737-6.266-5.317-10.001-3.531-3.737 1.787-5.318 6.265-3.531 10.001 4.144 8.666 13.08 14.265 22.766 14.265s18.623-5.599 22.766-14.265c1.787-3.736.206-8.214-3.531-10.001z" />
    </g>
    <path
      d="m246.516 353.096-.035-.035c-3.431-3.372-8.978-3.358-12.389.035-21.107 20.991-50.348 58.073-50.348 87.705v.002h.035c0 31.93 25.438 56.197 56.523 56.197 31.231.002 56.526-25.165 56.526-56.198h.035c-.001-30.253-28.909-66.384-50.347-87.706z"
      fill="#b9f0ff"
    />
    <path
      d="m112.318 380.341-.021-.021c-2.109-2.072-5.517-2.064-7.613.021-12.97 12.899-30.939 35.687-30.939 53.896v.001h.021c0 19.621 15.632 34.533 34.734 34.533 19.192.001 34.736-15.464 34.736-34.534h.021c-.001-18.591-17.765-40.794-30.939-53.896z"
      fill="#7ce3ff"
    />
    <path
      d="m385.443 352.46-.026-.026c-2.577-2.533-6.743-2.522-9.305.026-15.852 15.766-37.815 43.617-37.815 65.872v.002h.026c0 23.982 19.106 42.208 42.453 42.208 23.457.002 42.455-18.901 42.455-42.208h.026c-.001-22.723-21.713-49.86-37.814-65.874z"
      fill="#7ce3ff"
    />
  </svg>
)
export const Scuba: React.FunctionComponent<HTMLAttributes<any>> = ({ className }) => (
  <svg height="512" viewBox="-72 0 512 512" width="512" className={className}>
    <title>Scuba / Plongée</title>
    <path
      d="m12.742188 512c0-94.675781 76.75-171.425781 171.425781-171.425781s171.425781 76.75 171.425781 171.425781zm0 0"
      fill="#64505a"
    />
    <g fill="#5a4650">
      <path d="m184.167969 470.566406c-4.140625 0-7.5-3.359375-7.5-7.5v-90.394531c0-4.144531 3.359375-7.5 7.5-7.5 4.144531 0 7.5 3.355469 7.5 7.5v90.394531c0 4.140625-3.355469 7.5-7.5 7.5zm0 0" />
      <path d="m199.621094 470.566406h-30.90625c-4.140625 0-7.5-3.359375-7.5-7.5s3.359375-7.5 7.5-7.5h30.90625c4.144531 0 7.5 3.359375 7.5 7.5s-3.355469 7.5-7.5 7.5zm0 0" />
      <path d="m184.167969 340.574219c-33.757813 0-65.234375 9.765625-91.769531 26.613281 27.621093 13.90625 58.792968 21.75 91.769531 21.75 32.976562 0 64.148437-7.84375 91.769531-21.75-26.535156-16.847656-58.011719-26.613281-91.769531-26.613281zm0 0" />
      <path d="m210.722656 342.625c-8.652344-1.347656-17.523437-2.050781-26.554687-2.050781-94.675781 0-171.425781 76.75-171.425781 171.425781h53.113281c0-85.644531 62.804687-156.613281 144.867187-169.375zm0 0" />
    </g>
    <path
      d="m368.335938 184.167969c0 101.714843-82.453126 184.167969-184.167969 184.167969-101.714844 0-184.167969-82.453126-184.167969-184.167969 0-101.714844 82.453125-184.167969 184.167969-184.167969 101.714843 0 184.167969 82.453125 184.167969 184.167969zm0 0"
      fill="#6e5a64"
    />
    <path
      d="m51.507812 184.167969c0-92.972657 68.894532-169.839844 158.414063-182.367188-8.417969-1.179687-17.011719-1.800781-25.753906-1.800781-101.714844 0-184.167969 82.453125-184.167969 184.167969 0 101.714843 82.453125 184.167969 184.167969 184.167969 8.742187 0 17.335937-.625 25.753906-1.800782-89.519531-12.53125-158.414063-89.394531-158.414063-182.367187zm0 0"
      fill="#64505a"
    />
    <path
      d="m308.242188 224.527344c0 68.523437-55.550782 124.074218-124.074219 124.074218-68.523438 0-124.074219-55.550781-124.074219-124.074218 0-68.523438 55.550781-124.074219 124.074219-124.074219 68.523437 0 124.074219 55.550781 124.074219 124.074219zm0 0"
      fill="#ffe1a0"
    />
    <path
      d="m111.601562 224.527344c0-59.691406 42.15625-109.53125 98.320313-121.390625-8.308594-1.753907-16.921875-2.683594-25.753906-2.683594-68.523438 0-124.074219 55.550781-124.074219 124.074219 0 68.523437 55.550781 124.074218 124.074219 124.074218 8.832031 0 17.445312-.929687 25.753906-2.683593-56.164063-11.859375-98.320313-61.699219-98.320313-121.390625zm0 0"
      fill="#f0c382"
    />
    <path
      d="m37.472656 167.359375v28.894531c0 47.433594 38.453125 85.886719 85.886719 85.886719h27.902344c6.628906 0 12.808593-3.347656 16.425781-8.902344 7.734375-11.867187 25.117188-11.867187 32.851562 0 3.621094 5.554688 9.800782 8.902344 16.429688 8.902344h27.898438c47.4375 0 85.890624-38.453125 85.890624-85.886719v-28.894531c0-7.007813-5.683593-12.6875-12.6875-12.6875h-267.910156c-7.007812 0-12.6875 5.683594-12.6875 12.6875zm0 0"
      fill="#bd70ff"
    />
    <path
      d="m88.980469 196.253906v-28.890625c0-7.007812 5.679687-12.6875 12.6875-12.6875h-51.507813c-7.007812 0-12.6875 5.679688-12.6875 12.6875v28.890625c0 47.433594 38.453125 85.886719 85.886719 85.886719h27.902344c2.632812 0 5.191406-.535156 7.550781-1.519531-39.757812-7.523438-69.832031-42.421875-69.832031-84.367188zm0 0"
      fill="#a35bef"
    />
    <path
      d="m217.84375 260.898438c-7.621094-11.167969-20.164062-17.804688-33.730469-17.804688-13.5625 0-26.105469 6.636719-33.726562 17.804688h-27.027344c-35.703125 0-64.644531-28.945313-64.644531-64.644532v-15.234375c0-2.816406 2.285156-5.101562 5.105468-5.101562h240.589844c2.820313 0 5.105469 2.285156 5.105469 5.101562v15.234375c0 35.699219-28.945313 64.644532-64.644531 64.644532zm0 0"
      fill="#a5cdff"
    />
    <path
      d="m110.226562 196.253906v-15.230468c0-2.820313 2.285157-5.105469 5.101563-5.105469h-51.507813c-2.820312 0-5.105468 2.285156-5.105468 5.105469v15.230468c0 35.703125 28.941406 64.644532 64.644531 64.644532h27.027344c.886719-1.304688 1.851562-2.539063 2.871093-3.714844-25.074218-8.894532-43.03125-32.8125-43.03125-60.929688zm0 0"
      fill="#8cb4eb"
    />
    <path
      d="m330.757812 7.179688v329.554687c0 35.308594-28.621093 63.929687-63.929687 63.929687-35.304687 0-63.925781-28.621093-63.925781-63.929687v-20.039063h-37.578125v20.039063c0 56.0625 45.445312 101.507813 101.503906 101.507813 56.0625 0 101.507813-45.445313 101.507813-101.507813v-329.554687c0-3.964844-3.214844-7.179688-7.179688-7.179688h-23.21875c-3.964844 0-7.179688 3.214844-7.179688 7.179688zm0 0"
      fill="#edebed"
    />
    <path
      d="m347.96875 341.96875v-341.96875h-10.03125c-3.964844 0-7.179688 3.214844-7.179688 7.179688v329.554687c0 35.308594-28.621093 63.929687-63.929687 63.929687-35.304687 0-63.925781-28.621093-63.925781-63.929687v-20.039063h-18.734375v25.273438c0 45.234375 36.667969 81.898438 81.898437 81.898438 45.234375 0 81.902344-36.664063 81.902344-81.898438zm0 0"
      fill="#fff"
    />
    <path
      d="m213.011719 325.210938h-57.6875c-8.535157 0-15.453125-6.917969-15.453125-15.453126 0-8.53125 6.917968-15.453124 15.453125-15.453124h57.6875c8.535156 0 15.453125 6.917968 15.453125 15.453124 0 8.535157-6.917969 15.453126-15.453125 15.453126zm0 0"
      fill="#bd70ff"
    />
    <path
      d="m181.078125 309.757812c0-8.53125 6.917969-15.453124 15.453125-15.453124h-41.207031c-8.535157 0-15.453125 6.917968-15.453125 15.453124 0 8.535157 6.917968 15.453126 15.453125 15.453126h41.207031c-8.535156 0-15.453125-6.917969-15.453125-15.453126zm0 0"
      fill="#a35bef"
    />
    <path
      d="m361.15625 0h-23.21875c-3.964844 0-7.179688 3.214844-7.179688 7.179688v115.925781h37.578126v-115.925781c0-3.964844-3.214844-7.179688-7.179688-7.179688zm0 0"
      fill="#bd70ff"
    />
    <path
      d="m347.96875 0h-10.03125c-3.964844 0-7.179688 3.214844-7.179688 7.179688v115.925781h17.210938zm0 0"
      fill="#a35bef"
    />
  </svg>
)
export const JellyFish: React.FunctionComponent<HTMLAttributes<any>> = ({ className }) => (
  <svg x="0px" y="0px" viewBox="0 0 512 512" className={className}>
    <g>
      <path
        fill="#FF98C5"
        d="M87.454,479.129c-3.139,0-6.329-0.593-9.417-1.844c-12.845-5.206-19.04-19.839-13.834-32.685
		c15.155-37.401,14.427-57.952,13.583-81.749c-0.997-28.142-2.127-60.04,21.477-115.857c5.398-12.766,20.125-18.738,32.89-13.34
		c12.765,5.398,18.738,20.124,13.34,32.889c-19.28,45.589-18.437,69.361-17.545,94.53c0.915,25.803,1.951,55.051-17.226,102.375
		C106.766,473.209,97.371,479.129,87.454,479.129z"
      />
      <path
        fill="#FF98C5"
        d="M157.638,512c-7.426,0-14.778-3.28-19.73-9.566c-8.578-10.888-6.705-26.667,4.182-35.245
		c23.474-18.494,24.786-48.71,24.984-96.477c0.191-46.122,0.407-98.4,33.25-145.178c7.964-11.344,23.616-14.083,34.96-6.119
		c11.343,7.964,14.084,23.617,6.119,34.96c-23.795,33.893-23.969,75.911-24.137,116.545c-0.098,23.687-0.2,48.182-5.109,70.627
		c-6.105,27.916-18.864,49.199-39.006,65.069C168.552,510.241,163.075,512,157.638,512z"
      />
      <path
        fill="#FF98C5"
        d="M424.545,479.129c3.139,0,6.329-0.593,9.417-1.844c12.845-5.206,19.04-19.839,13.834-32.685
		c-15.155-37.401-14.427-57.952-13.583-81.749c0.997-28.142,2.127-60.04-21.477-115.857c-5.398-12.766-20.125-18.738-32.89-13.34
		c-12.765,5.398-18.738,20.124-13.34,32.889c19.28,45.589,18.437,69.361,17.545,94.53c-0.915,25.803-1.951,55.051,17.226,102.375
		C405.233,473.209,414.627,479.129,424.545,479.129z"
      />
      <path
        fill="#FF98C5"
        d="M354.36,512c7.426,0,14.778-3.28,19.73-9.566c8.578-10.888,6.705-26.667-4.181-35.245
		c-23.474-18.494-24.786-48.71-24.984-96.477c-0.191-46.122-0.407-98.4-33.25-145.178c-7.964-11.344-23.616-14.083-34.96-6.119
		c-11.343,7.964-14.084,23.617-6.119,34.96c23.795,33.893,23.969,75.911,24.137,116.545c0.098,23.687,0.2,48.182,5.109,70.627
		c6.105,27.916,18.864,49.199,39.006,65.069C343.447,510.241,348.924,512,354.36,512z"
      />
    </g>
    <g>
      <path
        fill="#EB5E8A"
        d="M412.736,246.995c-5.398-12.766-20.125-18.738-32.89-13.339
		c-12.765,5.398-18.738,20.124-13.339,32.89c9.858,23.309,14.448,40.907,16.467,55.913c3.678,0.398,7.442,0.635,11.303,0.635
		l0.697-0.002c13.156-0.094,25.91-2.24,37.922-6.27C430.456,298.034,424.866,275.677,412.736,246.995z"
      />
      <path
        fill="#EB5E8A"
        d="M342.565,312.905c-3.274-29.428-11.24-59.384-30.89-87.372c-7.964-11.343-23.616-14.083-34.96-6.119
		c-11.343,7.964-14.084,23.617-6.119,34.96c10.431,14.857,16.322,31.276,19.664,48.455c16.105,1.648,31.681,4.467,46.563,8.456
		C338.693,311.787,340.606,312.333,342.565,312.905z"
      />
      <path
        fill="#EB5E8A"
        d="M235.286,219.414c-11.345-7.963-26.996-5.225-34.96,6.119c-19.65,27.988-27.616,57.944-30.89,87.372
		c1.958-0.572,3.87-1.118,5.742-1.619c14.883-3.989,30.459-6.807,46.564-8.456c3.342-17.179,9.234-33.597,19.664-48.455
		C249.368,243.031,246.629,227.378,235.286,219.414z"
      />
      <path
        fill="#EB5E8A"
        d="M132.152,233.655c-12.765-5.398-27.491,0.574-32.89,13.339
		c-12.13,28.682-17.72,51.039-20.161,69.826c12.012,4.03,24.766,6.176,37.922,6.27c0,0,0.697,0.002,0.698,0.002
		c3.861,0,7.624-0.237,11.302-0.635c2.02-15.006,6.611-32.604,16.467-55.913C150.89,253.779,144.917,239.054,132.152,233.655z"
      />
    </g>
    <path
      fill="#FF98C5"
      d="M255.999,270.194c30.1,0,59.748,3.447,88.824,11.24c16.323,4.375,32.797,10.874,49.932,10.751
	c52.799-0.376,91.929-44.747,88.779-96.14C476.487,81.11,359.825,0,255.999,0C152.175,0,35.512,81.11,28.465,196.046
	c-3.15,51.393,35.98,95.764,88.779,96.14c17.134,0.123,33.609-6.376,49.932-10.751C196.251,273.641,225.9,270.194,255.999,270.194z"
    />
    <path
      fill="#EB5E8A"
      d="M59.371,196.046C66.069,86.783,171.831,8.096,271.452,0.594C266.28,0.205,261.124,0,255.999,0
	C152.175,0,35.512,81.11,28.465,196.046c-3.15,51.393,35.98,95.764,88.779,96.14c5.14,0.036,10.218-0.531,15.253-1.448
	C87.832,282.703,56.541,242.211,59.371,196.046z"
    />
    <g>
      <path
        fill="#3A484A"
        d="M161.509,212.413c-4.268,0-7.726-3.459-7.726-7.726v-17.101c0-4.267,3.458-7.726,7.726-7.726
		s7.726,3.459,7.726,7.726v17.101C169.236,208.954,165.777,212.413,161.509,212.413z"
      />
      <path
        fill="#3A484A"
        d="M350.49,212.413c-4.268,0-7.726-3.459-7.726-7.726v-17.101c0-4.267,3.458-7.726,7.726-7.726
		c4.268,0,7.726,3.459,7.726,7.726v17.101C358.216,208.954,354.757,212.413,350.49,212.413z"
      />
      <path
        fill="#3A484A"
        d="M255.999,221.541c-11.319,0-21.94-4.723-29.139-12.96c-2.809-3.213-2.481-8.093,0.731-10.902
		c3.213-2.809,8.094-2.482,10.902,0.731c4.266,4.879,10.646,7.677,17.505,7.677c6.86,0,13.24-2.798,17.504-7.676
		c2.807-3.214,7.69-3.542,10.901-0.732c3.213,2.808,3.542,7.689,0.732,10.902C277.939,216.818,267.318,221.541,255.999,221.541z"
      />
    </g>
  </svg>
)
export const Climb: React.FunctionComponent<HTMLAttributes<any>> = ({ className }) => (
  <svg viewBox="0 0 512.038 512.038" className={className}>
    <path
      fill="#CF4737"
      d="M69.747,184.663h19.346l0,0v70.348l0,0H69.747c-8.741,0-15.828-7.088-15.828-15.828v-38.691
	C53.918,191.751,61.006,184.663,69.747,184.663z"
    />
    <path
      fill="#3E8CC7"
      d="M238.581,105.522h-35.174c-19.425,0-35.174,15.749-35.174,35.174v158.283h105.522V140.696
	C273.755,121.271,258.006,105.522,238.581,105.522z"
    />
    <path
      fill="#FEC9A3"
      d="M264.962,17.587l-69.24,8.793c-0.739,2.875-1.108,5.83-1.108,8.793v35.174
	c0,19.425,15.749,35.174,35.174,35.174s35.174-15.749,35.174-35.174V35.174C265.322,29.317,265.322,23.443,264.962,17.587z"
    />
    <g>
      <path
        fill=":#75462E"
        d="M194.614,26.38v35.174l35.174-35.174h26.38c14.571,0,26.38-11.81,26.38-26.38h-61.554
		C206.424,0,194.614,11.81,194.614,26.38L194.614,26.38"
      />
      <path
        fill="#75462E"
        d="M273.755,298.978H168.233v87.935l-79.141,35.174l17.587,35.174l83.872-34.945
		c13.111-5.461,21.65-18.273,21.65-32.474v-39.043c0-9.189,7.448-16.646,16.646-16.646c6.015,0,11.563,3.245,14.509,8.486
		l74.366,132.21l35.174-17.587L273.755,298.978z"
      />
    </g>
    <g>
      <path
        fill="#3E8CC7"
        d="M84.229,500.296l-30.311-60.622l35.174-17.587l31.243,62.486c2.471,4.951,2.471,10.772,0,15.723l0,0
		c-2.981,5.962-9.075,9.726-15.732,9.726h-4.643C93.295,510.022,87.202,506.258,84.229,500.296z"
      />
      <path
        fill="#3E8CC7"
        d="M388.07,483.641l-52.761,26.38l-17.587-35.174l52.761-26.38c9.717-4.854,21.526-0.923,26.38,8.793
		l0,0l0,0C401.718,466.977,397.778,478.787,388.07,483.641L388.07,483.641z"
      />
    </g>
    <path
      fill="#FEC9A3"
      d="M394.331,160.771c-7.211-9.611-20.858-11.563-30.469-4.353c-0.827,0.616-1.6,1.293-2.33,2.022
	l-43.809,43.809l-43.967-52.761v70.348l3.843,5.76c14.193,21.271,42.939,27.022,64.219,12.83c2.541-1.697,4.907-3.632,7.061-5.795
	l43.431-43.431C399.959,181.541,400.821,169.433,394.331,160.771z"
    />
    <g>
      <path
        fill=":#75462E"
        d="M198.58,96.728h-65.52v17.587h65.52c12.715,0.009,23.013,10.324,23.004,23.039
		c0,3.473-0.791,6.903-2.304,10.025l-55.267,113.788l-22.16,2.638v17.587l25.061-3.614c5.777-0.835,10.754-4.476,13.305-9.726
		l54.845-112.979c9.796-20.172,1.381-44.469-18.792-54.265C210.759,98.126,204.709,96.737,198.58,96.728z"
      />
      <path
        fill="#75462E"
        d="M89.092,263.804c0,14.571,11.81,26.38,26.38,26.38h26.38c14.571,0,26.38-11.81,26.38-26.38v-8.793
		H89.092C89.092,255.011,89.092,263.804,89.092,263.804z"
      />
    </g>
    <path
      fill="#DE4C3C"
      d="M166.739,123.109c-3.728-10.543-13.7-17.596-24.886-17.587h-26.38c-14.571,0-26.38,11.81-26.38,26.38
	v123.109h79.141V131.902L166.739,123.109z"
    />
    <rect
      x="396.795"
      y="126.864"
      transform="matrix(-0.974 0.2265 -0.2265 -0.974 873.3374 541.7469)"
      fill="#75462E"
      width="17.587"
      height="388.228"
    />
    <path
      fill="#3E8CC7"
      d="M128.663,26.38c-21.852,0-39.571,17.719-39.571,39.571s17.719,39.571,39.571,39.571
	s39.571-17.719,39.571-39.571S150.515,26.38,128.663,26.38z M128.663,79.141c-7.281,0-13.19-5.909-13.19-13.19
	s5.909-13.19,13.19-13.19c7.281,0,13.19,5.909,13.19,13.19S135.944,79.141,128.663,79.141z"
    />
    <path
      fill="#FEC9A3"
      d="M228.029,145.734l-51.002,31.094l59.796,43.009c10.095,6.753,12.803,20.401,6.05,30.496
	c-0.211,0.317-0.431,0.624-0.66,0.932l0,0c-7,9.312-20.04,11.546-29.74,5.1l-73.61-52.189c-9.128-6.103-14.606-16.365-14.597-27.348
	l0,0c0-10.983,5.487-21.245,14.632-27.339l64.817-40.283c9.699-6.446,22.74-4.212,29.74,5.1l0,0
	c7.255,9.734,5.25,23.505-4.485,30.768C228.662,145.303,228.346,145.523,228.029,145.734z"
    />
  </svg>
)

const weatherStyle = css`
  .weather-container {
    @media (max-width: ${largeEnd}) {
      overflow-x: scroll;
    }
    table {
      margin-bottom: 0;
      td {
        position: relative;
        height: 85px; // display block on svg change the height, and I want to keep it like this
      }
      tbody.good {
        .good {
          border: 2px solid ${weatherGood};
        }
      }
      tbody.poor {
        .poor {
          border: 2px solid ${weatherBad};
        }
      }
      tbody.fair {
        .fair {
          border: 2px solid ${weatherAverage};
        }
      }
      tbody.sakura {
        .sakura {
          border: 2px solid ${japanCherryBlossom};
        }
      }
      tbody.autumn {
        .autumn {
          border: 2px solid ${weatherAutumn};
        }
      }
      tbody.snow-man {
        .snow-man {
          border: 2px solid ${weatherSki};
        }
      }
      svg {
        width: 50px;
        height: 50px;
        display: block;
      }
      .alt {
        position: absolute;
        bottom: 2px;
        width: 20px;
        height: 20px;
      }
      .alt.alt-left {
        left: 5px;
      }
      .alt.alt-right {
        right: 5px;
        top: 2px;
      }
      .alt.alt-top-left {
        left: 5px;
        top: 2px;
      }
    }
  }
  .weather-button-container {
    & > *:not(:last-of-type) {
      margin-right: 1rem;
    }
  }
`
const createButton = (color: string) => styled(Button)`
  &&.btn {
    width: 100px;
    background-color: transparent;
    border: 2px solid ${color};
    color: ${color};
  }
  &&.btn.active {
    border: 2px solid ${color};
    background-color: ${color};
    color: white;
  }
  // https://css-tricks.com/solving-sticky-hover-states-with-media-hover-hover/
  @media (hover: hover) {
    &&.btn: hover {
      border: 2px solid ${color};
      background-color: ${color};
      color: white;
    }
  }
`

const WeatherGoodMonths = createButton(weatherGood)
const WeatherBadMonths = createButton(weatherBad)
const WeatherSakura = createButton(japanCherryBlossom)
const WeatherAutumn = createButton(weatherAutumn)
const WeatherAverageMonths = createButton(weatherAverage)
const WeatherSki = createButton(weatherSki)

const getMonth = (lang: Lang, month: number) => {
  switch (month) {
    case 0:
      return lang === "fr" ? "JANVIER" : "JANUARY"
    case 1:
      return lang === "fr" ? "FÉVRIER" : "FEBRUARY"
    case 2:
      return lang === "fr" ? "MARS" : "MARCH"
    case 3:
      return lang === "fr" ? "AVRIL" : "APRIL"
    case 4:
      return lang === "fr" ? "MAI" : "MAY"
    case 5:
      return lang === "fr" ? "JUIN" : "JUNE"
    case 6:
      return lang === "fr" ? "JUILLET" : "JULY"
    case 7:
      return lang === "fr" ? "AOUT" : "AUGUST"
    case 8:
      return lang === "fr" ? "SEPTEMBRE" : "SEPTEMBER"
    case 9:
      return lang === "fr" ? "OCTOBRE" : "OCTOBER"
    case 10:
      return lang === "fr" ? "NOVEMBRE" : "NOVEMBER"
    case 11:
      return lang === "fr" ? "DÉCEMBRE" : "DECEMBER"
  }
}
const getWeatherType = (lang: Lang, weatherType: WeatherType) => {
  switch (weatherType) {
    case "good":
      return lang === "fr" ? "Mois favorable" : "Good month"
    case "fair":
      return lang === "fr" ? "Mois passable" : "Fair month"
    case "poor":
      return lang === "fr" ? "Mois défavorable" : "Poor month"
  }
}

const getWeather = (lang: Lang, icon: WeatherIconType) => {
  switch (icon) {
    case "sunny":
      return lang === "fr" ? "Soleil" : "Sunny"
      break
    case "heavy-rain":
      return lang === "fr" ? "Fortes Pluies" : "Heavy Rain"
      break
    case "light-rain":
      return lang === "fr" ? "Pluvieux" : "Rainy"
      break
    case "sun-cloud":
      return lang === "fr" ? "Partiellement nuageux" : "Partly Cloudy"
      break
    case "sun-rain":
      return lang === "fr" ? "Temps instable" : "Unstable weather"
      break
    case "snow":
      return lang === "fr" ? "Neige" : "Snow"
      break
  }
}
const getWeatherAddition = (lang: Lang, alt: WeatherAltIconType[]) => {
  const weatherAddition: string[] = []
  if (alt.includes("arctic")) {
    weatherAddition.push(lang === "fr" ? "Très froid" : "Arctic")
  }
  if (alt.includes("hot")) {
    weatherAddition.push(lang === "fr" ? "Très chaud" : "Hot")
  }
  if (alt.includes("cold")) {
    weatherAddition.push(lang === "fr" ? "Froid" : "Cold")
  }
  if (alt.includes("droplet")) {
    weatherAddition.push(lang === "fr" ? "Mousson" : "Monsoon")
  }
  return weatherAddition.join(" - ")
}
const getOtherAddition = (lang: Lang, alt: WeatherAltIconType[]) => {
  const weatherAddition: string[] = []
  if (alt.includes("scuba")) {
    weatherAddition.push(lang === "fr" ? "Plongée" : "Scuba Diving")
  }
  if (alt.includes("jelly-fish")) {
    weatherAddition.push(lang === "fr" ? "Méduse" : "Jellyfish")
  }
  if (alt.includes("sakura")) {
    weatherAddition.push("Sakura")
  }
  if (alt.includes("autumn")) {
    weatherAddition.push("Momiji")
  }
  if (alt.includes("snow-man")) {
    weatherAddition.push(lang === "fr" ? "Neige" : "Snow")
  }
  if (alt.includes("climb")) {
    weatherAddition.push(lang === "fr" ? "Ascension" : "Ascent")
  }
  return weatherAddition.join(" - ")
}

export const Weather: React.FunctionComponent<{
  entries: WeatherEntry[]
  className?: string
  extraButton?: boolean
  onMouseEnter?: (value: string) => void
  onMouseLeave?: () => void
}> = ({ entries, className = "", extraButton = false, onMouseEnter = () => void 0, onMouseLeave = () => void 0 }) => {
  const { i18n } = useCustomTranslation()
  const [displayMonths, setDisplayMonths] = useState<"NONE" | WeatherType | WeatherAltIconType>("NONE")
  return (
    <div css={weatherStyle} className={`mb3 ${className}`}>
      <div className="mb3 weather-container">
        <Table>
          <thead>
            <tr>
              <th />
              <th>Jan</th>
              <th>{i18n.languageCode === "fr" ? "Fev" : "Feb"}</th>
              <th>Mar</th>
              <th>{i18n.languageCode === "fr" ? "Avr" : "Apr"}</th>
              <th>{i18n.languageCode === "fr" ? "Mai" : "May"}</th>
              <th>Jun</th>
              <th>Jul</th>
              <th>{i18n.languageCode === "fr" ? "Aou" : "Aug"}</th>
              <th>Sep</th>
              <th>Oct</th>
              <th>Nov</th>
              <th>Dec</th>
            </tr>
          </thead>
          <tbody className={`${displayMonths.toLowerCase()}`}>
            {entries.map((entry, index) => {
              return (
                <tr key={index}>
                  <td>{entry.label}</td>
                  {entry.data.map((data, index2) => (
                    <td
                      className={`${data.type} ${Array.isArray(data.alt) ? data.alt.join(" ") : data.alt}`}
                      key={index2}
                      onMouseEnter={() => {
                        const month = getMonth(i18n.languageCode, index2)
                        const weatherType = getWeatherType(i18n.languageCode, data.type)
                        const weather = getWeather(i18n.languageCode, data.icon)
                        const weatherAddition = getWeatherAddition(
                          i18n.languageCode,
                          Array.isArray(data.alt) ? data.alt : ([] as WeatherAltIconType[]).concat(data.alt ?? [])
                        )
                        const temperature =
                          i18n.languageCode === "fr" ? `Temp Moyenne ${data.temp}°C` : `Average Temp ${data.temp}°C`
                        const otherAddition = getOtherAddition(
                          i18n.languageCode,
                          Array.isArray(data.alt) ? data.alt : ([] as WeatherAltIconType[]).concat(data.alt ?? [])
                        )
                        onMouseEnter(
                          `${month}\n${weatherType}\n${weather}${
                            weatherAddition ? `\n${weatherAddition}` : ""
                          }\n${temperature}${otherAddition ? `\n${otherAddition}` : ""}`
                        )
                      }}
                      onMouseLeave={onMouseLeave}
                    >
                      {data.icon === "light-rain" ? (
                        <LightRain />
                      ) : data.icon === "heavy-rain" ? (
                        <HeavyRain />
                      ) : data.icon === "sun-rain" ? (
                        <SunAndRain />
                      ) : data.icon === "sun-cloud" ? (
                        <SunAndCloud />
                      ) : data.icon === "snow" ? (
                        <Snow />
                      ) : (
                        <Sunny />
                      )}
                      {([] as WeatherAltIconType[])
                        .concat(data.alt || [])
                        .map((alt) =>
                          alt === "hot" ? (
                            <Hot className={`alt alt-left`} key={alt} />
                          ) : alt === "droplet" ? (
                            <Droplet className={`alt alt-right`} key={alt} />
                          ) : alt === "cold" ? (
                            <Cold className={`alt alt-left`} key={alt} />
                          ) : alt === "arctic" ? (
                            <Arctic className={`alt alt-left`} key={alt} />
                          ) : alt === "snow-man" ? (
                            <SnowMan className={`alt alt-right`} key={alt} />
                          ) : alt === "sakura" ? (
                            <Sakura className={`alt alt-right`} key={alt} />
                          ) : alt === "autumn" ? (
                            <Autumn className={`alt alt-right`} key={alt} />
                          ) : alt === "scuba" ? (
                            <Scuba className={`alt alt-right`} key={alt} />
                          ) : alt === "climb" ? (
                            <Climb className={`alt alt-right`} key={alt} />
                          ) : alt === "jelly-fish" ? (
                            <JellyFish className={`alt alt-top-left`} key={alt} />
                          ) : null
                        )}
                    </td>
                  ))}
                </tr>
              )
            })}
          </tbody>
        </Table>
      </div>
      <div className="flex weather-button-container mb3">
        <WeatherGoodMonths
          className={`${displayMonths === "good" ? "active" : ""} `}
          onClick={() => (displayMonths === "good" ? setDisplayMonths("NONE") : setDisplayMonths("good"))}
        >
          {i18n.languageCode === "fr" ? "Favorable" : "Good"}
        </WeatherGoodMonths>
        <WeatherAverageMonths
          className={`${displayMonths === "fair" ? "active" : ""} `}
          onClick={() => (displayMonths === "fair" ? setDisplayMonths("NONE") : setDisplayMonths("fair"))}
        >
          {i18n.languageCode === "fr" ? "Passable" : "Fair"}
        </WeatherAverageMonths>
        <WeatherBadMonths
          className={`${displayMonths === "poor" ? "active" : ""} `}
          onClick={() => (displayMonths === "poor" ? setDisplayMonths("NONE") : setDisplayMonths("poor"))}
        >
          {i18n.languageCode === "fr" ? "À éviter" : "Poor"}
        </WeatherBadMonths>
      </div>
      {extraButton && (
        <div className="flex weather-button-container">
          <WeatherSakura
            className={`${displayMonths === "sakura" ? "active" : ""} `}
            onClick={() => (displayMonths === "sakura" ? setDisplayMonths("NONE") : setDisplayMonths("sakura"))}
          >
            Sakura
          </WeatherSakura>
          <WeatherAutumn
            className={`${displayMonths === "autumn" ? "active" : ""} `}
            onClick={() => (displayMonths === "autumn" ? setDisplayMonths("NONE") : setDisplayMonths("autumn"))}
          >
            Momiji
          </WeatherAutumn>
          <WeatherSki
            className={`${displayMonths === "snow-man" ? "active" : ""} `}
            onClick={() => (displayMonths === "snow-man" ? setDisplayMonths("NONE") : setDisplayMonths("snow-man"))}
          >
            {i18n.languageCode === "fr" ? "Neige" : "Snow"}
          </WeatherSki>
        </div>
      )}{" "}
    </div>
  )
}

export const WeatherForHomePage = styled(Weather)`
  margin-bottom: 1.45rem;
`
